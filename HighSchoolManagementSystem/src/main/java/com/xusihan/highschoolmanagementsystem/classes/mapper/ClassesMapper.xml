<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xusihan.highschoolmanagementsystem.classes.mapper.ClassesMapper" >
  <resultMap id="BaseResultMap" type="com.xusihan.highschoolmanagementsystem.po.Classes" >
    <id column="ClassID" property="classid" jdbcType="INTEGER" />
    <result column="SchoolID" property="schoolid" jdbcType="INTEGER" />
    <result column="SemesterID" property="semesterid" jdbcType="INTEGER" />
    <result column="ClassName" property="classname" jdbcType="VARCHAR" />
    <result column="TeacherOfCharge" property="teacherofcharge" jdbcType="VARCHAR" />
    <result column="EnrollmentDate" property="enrollmentdate" jdbcType="DATE" />
    <result column="GraduateDate" property="graduatedate" jdbcType="DATE" />
    <result column="isGraduate" property="isgraduate" jdbcType="BIT" />
    <result column="ClassState" property="classstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ClassID, SchoolID, SemesterID, ClassName, TeacherOfCharge, EnrollmentDate, GraduateDate, 
    isGraduate, ClassState
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xusihan.highschoolmanagementsystem.po.ClassesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from classes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from classes
    where ClassID = #{classid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from classes
    where ClassID = #{classid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xusihan.highschoolmanagementsystem.po.ClassesExample" >
    delete from classes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xusihan.highschoolmanagementsystem.po.Classes" >
    insert into classes (ClassID, SchoolID, SemesterID, 
      ClassName, TeacherOfCharge, EnrollmentDate, 
      GraduateDate, isGraduate, ClassState
      )
    values (#{classid,jdbcType=INTEGER}, #{schoolid,jdbcType=INTEGER}, #{semesterid,jdbcType=INTEGER}, 
      #{classname,jdbcType=VARCHAR}, #{teacherofcharge,jdbcType=VARCHAR}, #{enrollmentdate,jdbcType=DATE}, 
      #{graduatedate,jdbcType=DATE}, #{isgraduate,jdbcType=BIT}, #{classstate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xusihan.highschoolmanagementsystem.po.Classes" >
    insert into classes
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="classid != null" >
        ClassID,
      </if>
      <if test="schoolid != null" >
        SchoolID,
      </if>
      <if test="semesterid != null" >
        SemesterID,
      </if>
      <if test="classname != null" >
        ClassName,
      </if>
      <if test="teacherofcharge != null" >
        TeacherOfCharge,
      </if>
      <if test="enrollmentdate != null" >
        EnrollmentDate,
      </if>
      <if test="graduatedate != null" >
        GraduateDate,
      </if>
      <if test="isgraduate != null" >
        isGraduate,
      </if>
      <if test="classstate != null" >
        ClassState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="classid != null" >
        #{classid,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="semesterid != null" >
        #{semesterid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        #{classname,jdbcType=VARCHAR},
      </if>
      <if test="teacherofcharge != null" >
        #{teacherofcharge,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentdate != null" >
        #{enrollmentdate,jdbcType=DATE},
      </if>
      <if test="graduatedate != null" >
        #{graduatedate,jdbcType=DATE},
      </if>
      <if test="isgraduate != null" >
        #{isgraduate,jdbcType=BIT},
      </if>
      <if test="classstate != null" >
        #{classstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xusihan.highschoolmanagementsystem.po.ClassesExample" resultType="java.lang.Integer" >
    select count(*) from classes
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update classes
    <set >
      <if test="record.classid != null" >
        ClassID = #{record.classid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null" >
        SchoolID = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.semesterid != null" >
        SemesterID = #{record.semesterid,jdbcType=INTEGER},
      </if>
      <if test="record.classname != null" >
        ClassName = #{record.classname,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherofcharge != null" >
        TeacherOfCharge = #{record.teacherofcharge,jdbcType=VARCHAR},
      </if>
      <if test="record.enrollmentdate != null" >
        EnrollmentDate = #{record.enrollmentdate,jdbcType=DATE},
      </if>
      <if test="record.graduatedate != null" >
        GraduateDate = #{record.graduatedate,jdbcType=DATE},
      </if>
      <if test="record.isgraduate != null" >
        isGraduate = #{record.isgraduate,jdbcType=BIT},
      </if>
      <if test="record.classstate != null" >
        ClassState = #{record.classstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update classes
    set ClassID = #{record.classid,jdbcType=INTEGER},
      SchoolID = #{record.schoolid,jdbcType=INTEGER},
      SemesterID = #{record.semesterid,jdbcType=INTEGER},
      ClassName = #{record.classname,jdbcType=VARCHAR},
      TeacherOfCharge = #{record.teacherofcharge,jdbcType=VARCHAR},
      EnrollmentDate = #{record.enrollmentdate,jdbcType=DATE},
      GraduateDate = #{record.graduatedate,jdbcType=DATE},
      isGraduate = #{record.isgraduate,jdbcType=BIT},
      ClassState = #{record.classstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xusihan.highschoolmanagementsystem.po.Classes" >
    update classes
    <set >
      <if test="schoolid != null" >
        SchoolID = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="semesterid != null" >
        SemesterID = #{semesterid,jdbcType=INTEGER},
      </if>
      <if test="classname != null" >
        ClassName = #{classname,jdbcType=VARCHAR},
      </if>
      <if test="teacherofcharge != null" >
        TeacherOfCharge = #{teacherofcharge,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentdate != null" >
        EnrollmentDate = #{enrollmentdate,jdbcType=DATE},
      </if>
      <if test="graduatedate != null" >
        GraduateDate = #{graduatedate,jdbcType=DATE},
      </if>
      <if test="isgraduate != null" >
        isGraduate = #{isgraduate,jdbcType=BIT},
      </if>
      <if test="classstate != null" >
        ClassState = #{classstate,jdbcType=INTEGER},
      </if>
    </set>
    where ClassID = #{classid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xusihan.highschoolmanagementsystem.po.Classes" >
    update classes
    set SchoolID = #{schoolid,jdbcType=INTEGER},
      SemesterID = #{semesterid,jdbcType=INTEGER},
      ClassName = #{classname,jdbcType=VARCHAR},
      TeacherOfCharge = #{teacherofcharge,jdbcType=VARCHAR},
      EnrollmentDate = #{enrollmentdate,jdbcType=DATE},
      GraduateDate = #{graduatedate,jdbcType=DATE},
      isGraduate = #{isgraduate,jdbcType=BIT},
      ClassState = #{classstate,jdbcType=INTEGER}
    where ClassID = #{classid,jdbcType=INTEGER}
  </update>
</mapper>