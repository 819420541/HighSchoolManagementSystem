<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xusihan.highschoolmanagementsystem.database.mapper.CourseMapper" >
  <resultMap id="BaseResultMap" type="com.xusihan.highschoolmanagementsystem.po.Course" >
    <id column="CourseID" property="courseid" jdbcType="INTEGER" />
    <result column="SchoolID" property="schoolid" jdbcType="INTEGER" />
    <result column="SemesterID" property="semesterid" jdbcType="INTEGER" />
    <result column="CourseBookID" property="coursebookid" jdbcType="INTEGER" />
    <result column="CourseName" property="coursename" jdbcType="VARCHAR" />
    <result column="CourseState" property="coursestate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    CourseID, SchoolID, SemesterID, CourseBookID, CourseName, CourseState
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xusihan.highschoolmanagementsystem.po.CourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from course
    where CourseID = #{courseid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from course
    where CourseID = #{courseid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xusihan.highschoolmanagementsystem.po.CourseExample" >
    delete from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xusihan.highschoolmanagementsystem.po.Course" >
    insert into course (CourseID, SchoolID, SemesterID, 
      CourseBookID, CourseName, CourseState
      )
    values (#{courseid,jdbcType=INTEGER}, #{schoolid,jdbcType=INTEGER}, #{semesterid,jdbcType=INTEGER}, 
      #{coursebookid,jdbcType=INTEGER}, #{coursename,jdbcType=VARCHAR}, #{coursestate,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.xusihan.highschoolmanagementsystem.po.Course" >
    insert into course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="courseid != null" >
        CourseID,
      </if>
      <if test="schoolid != null" >
        SchoolID,
      </if>
      <if test="semesterid != null" >
        SemesterID,
      </if>
      <if test="coursebookid != null" >
        CourseBookID,
      </if>
      <if test="coursename != null" >
        CourseName,
      </if>
      <if test="coursestate != null" >
        CourseState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="courseid != null" >
        #{courseid,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="semesterid != null" >
        #{semesterid,jdbcType=INTEGER},
      </if>
      <if test="coursebookid != null" >
        #{coursebookid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="coursestate != null" >
        #{coursestate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xusihan.highschoolmanagementsystem.po.CourseExample" resultType="java.lang.Integer" >
    select count(*) from course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update course
    <set >
      <if test="record.courseid != null" >
        CourseID = #{record.courseid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null" >
        SchoolID = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.semesterid != null" >
        SemesterID = #{record.semesterid,jdbcType=INTEGER},
      </if>
      <if test="record.coursebookid != null" >
        CourseBookID = #{record.coursebookid,jdbcType=INTEGER},
      </if>
      <if test="record.coursename != null" >
        CourseName = #{record.coursename,jdbcType=VARCHAR},
      </if>
      <if test="record.coursestate != null" >
        CourseState = #{record.coursestate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update course
    set CourseID = #{record.courseid,jdbcType=INTEGER},
      SchoolID = #{record.schoolid,jdbcType=INTEGER},
      SemesterID = #{record.semesterid,jdbcType=INTEGER},
      CourseBookID = #{record.coursebookid,jdbcType=INTEGER},
      CourseName = #{record.coursename,jdbcType=VARCHAR},
      CourseState = #{record.coursestate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xusihan.highschoolmanagementsystem.po.Course" >
    update course
    <set >
      <if test="schoolid != null" >
        SchoolID = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="semesterid != null" >
        SemesterID = #{semesterid,jdbcType=INTEGER},
      </if>
      <if test="coursebookid != null" >
        CourseBookID = #{coursebookid,jdbcType=INTEGER},
      </if>
      <if test="coursename != null" >
        CourseName = #{coursename,jdbcType=VARCHAR},
      </if>
      <if test="coursestate != null" >
        CourseState = #{coursestate,jdbcType=INTEGER},
      </if>
    </set>
    where CourseID = #{courseid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xusihan.highschoolmanagementsystem.po.Course" >
    update course
    set SchoolID = #{schoolid,jdbcType=INTEGER},
      SemesterID = #{semesterid,jdbcType=INTEGER},
      CourseBookID = #{coursebookid,jdbcType=INTEGER},
      CourseName = #{coursename,jdbcType=VARCHAR},
      CourseState = #{coursestate,jdbcType=INTEGER}
    where CourseID = #{courseid,jdbcType=INTEGER}
  </update>
</mapper>