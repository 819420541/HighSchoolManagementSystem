<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xusihan.highschoolmanagementsystem.exams.mapper.ExamsMapper" >
  <resultMap id="BaseResultMap" type="com.xusihan.highschoolmanagementsystem.po.Exams" >
    <id column="ExamID" property="examid" jdbcType="INTEGER" />
    <result column="ExamTypeID" property="examtypeid" jdbcType="INTEGER" />
    <result column="SchoolID" property="schoolid" jdbcType="INTEGER" />
    <result column="SemesterID" property="semesterid" jdbcType="INTEGER" />
    <result column="ExamName" property="examname" jdbcType="VARCHAR" />
    <result column="ExamMedium" property="exammedium" jdbcType="VARCHAR" />
    <result column="Remark" property="remark" jdbcType="VARCHAR" />
    <result column="ExamState" property="examstate" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ExamID, ExamTypeID, SchoolID, SemesterID, ExamName, ExamMedium, Remark, ExamState
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xusihan.highschoolmanagementsystem.po.ExamsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from exams
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from exams
    where ExamID = #{examid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from exams
    where ExamID = #{examid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xusihan.highschoolmanagementsystem.po.ExamsExample" >
    delete from exams
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xusihan.highschoolmanagementsystem.po.Exams" >
    insert into exams (ExamID, ExamTypeID, SchoolID, 
      SemesterID, ExamName, ExamMedium, 
      Remark, ExamState)
    values (#{examid,jdbcType=INTEGER}, #{examtypeid,jdbcType=INTEGER}, #{schoolid,jdbcType=INTEGER}, 
      #{semesterid,jdbcType=INTEGER}, #{examname,jdbcType=VARCHAR}, #{exammedium,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{examstate,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xusihan.highschoolmanagementsystem.po.Exams" >
    insert into exams
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        ExamID,
      </if>
      <if test="examtypeid != null" >
        ExamTypeID,
      </if>
      <if test="schoolid != null" >
        SchoolID,
      </if>
      <if test="semesterid != null" >
        SemesterID,
      </if>
      <if test="examname != null" >
        ExamName,
      </if>
      <if test="exammedium != null" >
        ExamMedium,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
      <if test="examstate != null" >
        ExamState,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="examid != null" >
        #{examid,jdbcType=INTEGER},
      </if>
      <if test="examtypeid != null" >
        #{examtypeid,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="semesterid != null" >
        #{semesterid,jdbcType=INTEGER},
      </if>
      <if test="examname != null" >
        #{examname,jdbcType=VARCHAR},
      </if>
      <if test="exammedium != null" >
        #{exammedium,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="examstate != null" >
        #{examstate,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xusihan.highschoolmanagementsystem.po.ExamsExample" resultType="java.lang.Integer" >
    select count(*) from exams
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update exams
    <set >
      <if test="record.examid != null" >
        ExamID = #{record.examid,jdbcType=INTEGER},
      </if>
      <if test="record.examtypeid != null" >
        ExamTypeID = #{record.examtypeid,jdbcType=INTEGER},
      </if>
      <if test="record.schoolid != null" >
        SchoolID = #{record.schoolid,jdbcType=INTEGER},
      </if>
      <if test="record.semesterid != null" >
        SemesterID = #{record.semesterid,jdbcType=INTEGER},
      </if>
      <if test="record.examname != null" >
        ExamName = #{record.examname,jdbcType=VARCHAR},
      </if>
      <if test="record.exammedium != null" >
        ExamMedium = #{record.exammedium,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        Remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.examstate != null" >
        ExamState = #{record.examstate,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update exams
    set ExamID = #{record.examid,jdbcType=INTEGER},
      ExamTypeID = #{record.examtypeid,jdbcType=INTEGER},
      SchoolID = #{record.schoolid,jdbcType=INTEGER},
      SemesterID = #{record.semesterid,jdbcType=INTEGER},
      ExamName = #{record.examname,jdbcType=VARCHAR},
      ExamMedium = #{record.exammedium,jdbcType=VARCHAR},
      Remark = #{record.remark,jdbcType=VARCHAR},
      ExamState = #{record.examstate,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xusihan.highschoolmanagementsystem.po.Exams" >
    update exams
    <set >
      <if test="examtypeid != null" >
        ExamTypeID = #{examtypeid,jdbcType=INTEGER},
      </if>
      <if test="schoolid != null" >
        SchoolID = #{schoolid,jdbcType=INTEGER},
      </if>
      <if test="semesterid != null" >
        SemesterID = #{semesterid,jdbcType=INTEGER},
      </if>
      <if test="examname != null" >
        ExamName = #{examname,jdbcType=VARCHAR},
      </if>
      <if test="exammedium != null" >
        ExamMedium = #{exammedium,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="examstate != null" >
        ExamState = #{examstate,jdbcType=INTEGER},
      </if>
    </set>
    where ExamID = #{examid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xusihan.highschoolmanagementsystem.po.Exams" >
    update exams
    set ExamTypeID = #{examtypeid,jdbcType=INTEGER},
      SchoolID = #{schoolid,jdbcType=INTEGER},
      SemesterID = #{semesterid,jdbcType=INTEGER},
      ExamName = #{examname,jdbcType=VARCHAR},
      ExamMedium = #{exammedium,jdbcType=VARCHAR},
      Remark = #{remark,jdbcType=VARCHAR},
      ExamState = #{examstate,jdbcType=INTEGER}
    where ExamID = #{examid,jdbcType=INTEGER}
  </update>
</mapper>